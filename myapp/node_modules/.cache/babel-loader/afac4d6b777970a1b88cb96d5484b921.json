{"ast":null,"code":"const axios = require('axios');\n\nconst jsSHA = require('jssha');\n\nconst ptx = require('./ptx');\n\naxios.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.resolve(error.response);\n});\n\nconst getAuthorizationHeader = function () {\n  var AppID = ptx.AppID;\n  var AppKey = ptx.AppKey;\n  var GMTString = new Date().toGMTString();\n  var ShaObj = new jsSHA('SHA-1', 'TEXT');\n  ShaObj.setHMACKey(AppKey, 'TEXT');\n  ShaObj.update('x-date: ' + GMTString);\n  var HMAC = ShaObj.getHMAC('B64');\n  var Authorization = 'hmac username=\"' + AppID + '\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' + HMAC + '\"';\n  return {\n    'Authorization': Authorization,\n    'X-Date': GMTString,\n    'Accept-Encoding': 'gzip'\n  };\n};\n\nexports.axiosCall = options => {\n  const {\n    method,\n    url,\n    data\n  } = options;\n  console.log('123');\n\n  switch (method) {\n    case 'POST':\n      return axios({\n        method: 'POST',\n        url: url,\n        timeout: 30 * 1000,\n        data: data,\n        headers: getAuthorizationHeader()\n      }).then(response => {\n        // if(response.status === 200) {}\n        console.log(response);\n        return response;\n      });\n\n    case 'GET':\n    default:\n      return axios({\n        method: 'GET',\n        url: url,\n        timeout: 30 * 1000 // headers: getAuthorizationHeader(),\n\n      }).then(response => {\n        // if(response.status === 200) {}\n        console.log('111');\n        console.log(response);\n        return response;\n      });\n  }\n};\n\nexports.formatDate = date => {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n};","map":{"version":3,"sources":["/Users/chienyoushan/Desktop/33/myapp/src/pages/Home/controller/tool.js"],"names":["axios","require","jsSHA","ptx","interceptors","request","use","config","error","Promise","reject","response","resolve","getAuthorizationHeader","AppID","AppKey","GMTString","Date","toGMTString","ShaObj","setHMACKey","update","HMAC","getHMAC","Authorization","exports","axiosCall","options","method","url","data","console","log","timeout","headers","then","formatDate","date","d","month","getMonth","day","getDate","year","getFullYear","length","join"],"mappings":"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","sourcesContent":["const axios = require('axios')\nconst jsSHA = require('jssha')\nconst ptx = require('./ptx')\n\naxios.interceptors.request.use(\n  config => {\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\naxios.interceptors.response.use(\n  response => {\n    return response\n  },\n  error => {\n    return Promise.resolve(error.response)\n  }\n)\n\nconst getAuthorizationHeader = function () {\n  var AppID = ptx.AppID\n  var AppKey = ptx.AppKey\n\n  var GMTString = new Date().toGMTString()\n  var ShaObj = new jsSHA('SHA-1', 'TEXT')\n  ShaObj.setHMACKey(AppKey, 'TEXT')\n  ShaObj.update('x-date: ' + GMTString)\n  var HMAC = ShaObj.getHMAC('B64')\n  var Authorization = 'hmac username=\"' + AppID + '\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' + HMAC + '\"'\n\n  return {\n    'Authorization': Authorization,\n    'X-Date': GMTString,\n    'Accept-Encoding': 'gzip',\n  }\n}\n\nexports.axiosCall = options => {\n  const { method, url, data } = options\n  console.log('123');\n  switch (method) {\n    case 'POST':\n      return axios({\n        method: 'POST',\n        url: url,\n        timeout: 30 * 1000,\n        data: data,\n        headers: getAuthorizationHeader(),\n      }).then(response => {\n        // if(response.status === 200) {}\n        console.log(response);\n        return response\n      })\n\n    case 'GET':\n    default:\n      return axios({\n        method: 'GET',\n        url: url,\n        timeout: 30 * 1000,\n        // headers: getAuthorizationHeader(),\n      }).then(response => {\n        // if(response.status === 200) {}\n        console.log('111')\n        console.log(response);\n        return response\n      })\n  }\n}\n\nexports.formatDate = date => {\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear()\n\n  if (month.length < 2) month = '0' + month\n  if (day.length < 2) day = '0' + day\n\n  return [year, month, day].join('-')\n}"]},"metadata":{},"sourceType":"module"}